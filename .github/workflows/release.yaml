name: Release
on:
  release:
    types: [ released ]
env:
  IMAGE_NAME: biinge-api
jobs:
  linter:
    name: Linter
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
          cache: true
          cache-dependency-path: go.sum
      - name: golangci-lint
        # NOTE: https://github.com/golangci/golangci-lint-action/releases/tag/v6.2.0
        uses: golangci/golangci-lint-action@ec5d18412c0aeab7936cb16880d708ba2a64e1ae
        with:
          version: v1.64
  test:
    name: Test
    needs: linter
    permissions:
      contents: read
    env:
      GO_ENV: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.4-alpine
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: biinge-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
          cache: true
          cache-dependency-path: go.sum
      - name: Load schema.sql
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d biinge-test -f db/schema.sql
      - name: Run tests
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        # NOTE: https://github.com/actions/checkout/releases/tag/v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Extract version from tag
        id: version
        run: echo "value=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        # NOTE: https://github.com/docker/setup-buildx-action/releases/tag/v3.11.1
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
      - name: Log in to GitHub Container Registry
        # NOTE: https://github.com/docker/login-action/releases/tag/v3.4.0
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        # NOTE: https://github.com/docker/build-push-action/releases/tag/v6.18.0
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.value }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
      - name: Create GitHub Release
        # NOTE: https://github.com/softprops/action-gh-release/releases/tag/v2.3.2
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: ${{ steps.version.outputs.value }}
          name: Release ${{ steps.version.outputs.value }}
          generate_release_notes: true
