// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/controllers/authentication.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/controllers/authentication.go -destination=internal/app/controllers/authentication_mock.go -package=controllers
//

// Package controllers is a generated GoMock package.
package controllers

import (
	http "net/http"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAuthenticationController is a mock of AuthenticationController interface.
type MockAuthenticationController struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationControllerMockRecorder
	isgomock struct{}
}

// MockAuthenticationControllerMockRecorder is the mock recorder for MockAuthenticationController.
type MockAuthenticationControllerMockRecorder struct {
	mock *MockAuthenticationController
}

// NewMockAuthenticationController creates a new mock instance.
func NewMockAuthenticationController(ctrl *gomock.Controller) *MockAuthenticationController {
	mock := &MockAuthenticationController{ctrl: ctrl}
	mock.recorder = &MockAuthenticationControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticationController) EXPECT() *MockAuthenticationControllerMockRecorder {
	return m.recorder
}

// HandleLogin mocks base method.
func (m *MockAuthenticationController) HandleLogin(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleLogin", w, r)
}

// HandleLogin indicates an expected call of HandleLogin.
func (mr *MockAuthenticationControllerMockRecorder) HandleLogin(w, r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleLogin", reflect.TypeOf((*MockAuthenticationController)(nil).HandleLogin), w, r)
}

// HandleRegistration mocks base method.
func (m *MockAuthenticationController) HandleRegistration(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleRegistration", w, r)
}

// HandleRegistration indicates an expected call of HandleRegistration.
func (mr *MockAuthenticationControllerMockRecorder) HandleRegistration(w, r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRegistration", reflect.TypeOf((*MockAuthenticationController)(nil).HandleRegistration), w, r)
}
